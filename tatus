[1mdiff --git a/Makefile b/Makefile[m
[1mindex 93fba7e..8dc363a 100644[m
[1m--- a/Makefile[m
[1m+++ b/Makefile[m
[36m@@ -38,15 +38,14 @@[m [mvmm.elf: $(OBJS) link.ld[m
 vmm.img: bootblock vmm.elf[m
 [m
 vmm.iso: vmm.elf boot/grub.cfg[m
[31m-	@mkdir -p iso[m
[31m-	@mkdir -p iso/boot[m
[31m-	@mkdir -p iso/grub[m
[31m-	@cp boot/grub.cfg iso/grub[m
[31m-	@cp vmm.elf boot/[m
[32m+[m	[32m@mkdir -p iso/boot/grub[m
[32m+[m	[32m@cp boot/grub.cfg iso/boot/grub[m
[32m+[m	[32m@cp vmm.elf iso/boot/[m
 	@grub-mkrescue -o $@ iso/[m
 [m
 clean:[m
 	$(RM) $(OBJS) vmm.elf vmm.iso[m
[32m+[m	[32m$(RM) -rf iso/[m
 [m
 qemu-img: vmm.img[m
 	$(QEMU) -nographic -drive file=vmm.img,index=0,media=disk,format=raw -smp $(NCPU) -m $(MEMSZ)[m
[1mdiff --git a/core/asm.h b/core/asm.h[m
[1mindex b03415e..e69de29 100644[m
[1m--- a/core/asm.h[m
[1m+++ b/core/asm.h[m
[36m@@ -1,6 +0,0 @@[m
[31m-#include "types.h"[m
[31m-[m
[31m-static inline u32[m
[31m-inb(u16 port) {[m
[31m-	return 0;[m
[31m-}[m
[1mdiff --git a/core/entry.S b/core/entry.S[m
[1mindex 1887386..1c75df2 100644[m
[1m--- a/core/entry.S[m
[1m+++ b/core/entry.S[m
[36m@@ -27,6 +27,8 @@[m
  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.[m
  */[m
 [m
[32m+[m[32m#include <akarivmm/asm.h>[m
[32m+[m
 #define MULTIBOOT2_MAGIC	0xe85250d6[m
 #define MULTIBOOT2_FLAGS	0		// 32bit i386[m
 #define MULTIBOOT2_LENGTH	(header_end - multiboot_header)[m
[36m@@ -41,10 +43,45 @@[m [mmultiboot_header:[m
 	.long	MULTIBOOT2_FLAGS[m
 	.long	MULTIBOOT2_LENGTH[m
 	.long	CHECKSUM[m
[32m+[m
[32m+[m	[32m.word	0[m
[32m+[m	[32m.word	0[m
[32m+[m	[32m.long	8[m
 header_end:[m
 [m
[31m-.section ".text"[m
[32m+[m[32m.section ".text.boot"[m
 .code32[m
 .global entry32[m
 entry32:[m
[31m-	hlt[m
[32m+[m	[32mcli[m
[32m+[m
[32m+[m	[32m// enable PAE[m
[32m+[m	[32mmovl	%cr4, %eax[m
[32m+[m	[32morl	%eax, $CR4_PAE[m
[32m+[m	[32mmovl	%eax, %cr4[m
[32m+[m
[32m+[m	[32m// init sp[m
[32m+[m	[32mmovl	$0x7c00, %eax[m
[32m+[m	[32mmovl	%eax, %esp[m
[32m+[m
[32m+[m	[32m// init pgt[m
[32m+[m
[32m+[m	[32m// enable long mode[m
[32m+[m	[32mmovl	$0xc0000080, %ecx[m
[32m+[m	[32mrdmsr[m
[32m+[m	[32morl	$EFER_LME, %eax[m
[32m+[m	[32mwrmsr[m
[32m+[m
[32m+[m	[32mmovl	entry64, %eax[m
[32m+[m	[32mjmp	*%eax[m
[32m+[m
[32m+[m[32m.code64[m
[32m+[m[32m.global entry64[m
[32m+[m[32mentry64:[m
[32m+[m	[32mcall	vmm_main_bsp[m
[32m+[m
[32m+[m	[32m// never return here![m
[32m+[m	[32mjmp	.[m
[32m+[m
[32m+[m[32mzerobss:[m
[32m+[m	[32mret[m
[1mdiff --git a/core/main.c b/core/main.c[m
[1mindex 720be71..8fdf772 100644[m
[1m--- a/core/main.c[m
[1m+++ b/core/main.c[m
[36m@@ -28,8 +28,18 @@[m
  */[m
 [m
 #include <akarivmm/types.h>[m
[32m+[m[32m#include <akarivmm/asm.h>[m
[32m+[m[32m#include <akarivmm/multiboot.h>[m
[32m+[m[32m#include <akarivmm/compiler.h>[m
 [m
[31m-void[m
[31m-vmm_init_cpu0() {[m
[31m-	;[m
[32m+[m[32mvoid __noreturn[m
[32m+[m[32mvmm_main_bsp(void) {[m
[32m+[m	[32mfor(;;)[m
[32m+[m		[32mhlt();[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid __noreturn[m
[32m+[m[32mvmm_main_ap(void) {[m
[32m+[m	[32mfor(;;)[m
[32m+[m		[32mhlt();[m
 }[m
[1mdiff --git a/link.ld b/link.ld[m
[1mindex 02a1672..27446c9 100644[m
[1m--- a/link.ld[m
[1m+++ b/link.ld[m
[36m@@ -3,9 +3,38 @@[m [mENTRY(entry32)[m
 [m
 SECTIONS {[m
 	. = 1M;[m
[32m+[m	[32mvmm_start = .;[m
 [m
 	.text : {[m
[31m-		*(.text.head)[m
[32m+[m		[32mKEEP(*(.text.head))[m
[32m+[m		[32mKEEP(*(.text.boot))[m
 		*(.text)[m
[32m+[m		[32m*(.text.*)[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32m. = ALIGN(4096);[m
[32m+[m	[32m.data : {[m
[32m+[m		[32m*(.data .data.*)[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m. = ALIGN(4096);[m
[32m+[m	[32m.rodata : {[m
[32m+[m		[32m*(.rodata .rodata.*)[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m. = ALIGN(16);[m
[32m+[m	[32m.bss : {[m
[32m+[m		[32m__bss_start = .;[m
[32m+[m		[32m*(.bss .bss.*)[m
[32m+[m		[32m__bss_end = .;[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32m. = ALIGN(4096);[m
[32m+[m	[32mvmm_end = .;[m
[32m+[m
[32m+[m	[32m/DISCARD/ : {[m
[32m+[m		[32m*(.comment .comment.*)[m
 	}[m
 }[m
[32m+[m
[32m+[m[32m__bss_size = (__bss_end - __bss_start) >> 3;[m
